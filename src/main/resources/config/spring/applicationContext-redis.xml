<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


    <!--&lt;!&ndash;添加数据库配置文件&ndash;&gt;-->
    <!--<context:property-placeholder location="classpath:jdbc.properties"/>-->

    <!-- 自动扫描 -->
    <context:component-scan base-package="com.ning" />
    <!-- 引入配置文件 -->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations" value="classpath:*.properties" />
    </bean>

    <!-- Jedis 连接池配置-->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxActive" value="${redis.pool.maxActive}" />
        <property name="maxIdle" value="${redis.pool.maxIdle}" />
        <property name="maxWait" value="${redis.pool.maxWait}" />
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
    </bean>
    <!-- Jedis ConnectionFactory 数据库连接配置-->
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.hostname}" />
        <property name="port" value="${redis.port}" />
        <property name="password" value="${redis.password}" />
        <property name="poolConfig" ref="jedisPoolConfig" />
    </bean>
    <!-- redisTemplate配置，redisTemplate是对Jedis的对redis操作的扩展，有更多的操作，封装使操作更便捷 -->

    <bean id="keySerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer">
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
        <property name="keySerializer" ref="keySerializer" />
    </bean>

    <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory" />
    </bean>
    <bean id="valueOps"
          class="org.springframework.data.redis.core.DefaultValueOperations">
        <constructor-arg ref="redisTemplate" />
    </bean>
    <bean id="listOps"
          class="org.springframework.data.redis.core.DefaultListOperations">
        <constructor-arg ref="redisTemplate" />
    </bean>
    <bean id="setOps"
          class="org.springframework.data.redis.core.DefaultSetOperations">
        <constructor-arg ref="redisTemplate" />
    </bean>
    <bean id="zsetOps"
          class="org.springframework.data.redis.core.DefaultZSetOperations">
        <constructor-arg ref="redisTemplate" />
    </bean>
    <bean id="hashOps"
          class="org.springframework.data.redis.core.DefaultHashOperations">
        <constructor-arg ref="redisTemplate" />
    </bean>



</beans>